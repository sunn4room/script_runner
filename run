#!/bin/sh

# shellcheck disable=SC3040
set -o pipefail

_init() {
    TEMP_DIR="/tmp/script_runner"
    test -d "${TEMP_DIR}" || mkdir "${TEMP_DIR}"
    LOG_FILE="${TEMP_DIR}/log"
    SCRIPT_FILE="${TEMP_DIR}/script"
    test -f "${SCRIPT_FILE}" || {
        touch "${SCRIPT_FILE}"
        chmod u+x "${SCRIPT_FILE}"
    }
    CACHE_DIR="${TEMP_DIR}/cache"
    test -d "${CACHE_DIR}" && rm -rf "${CACHE_DIR}"
    mkdir "${CACHE_DIR}"
    EXECUTE_FILE="${TEMP_DIR}/execute"
    test -f "${EXECUTE_FILE}" && rm "${EXECUTE_FILE}"
    touch "${EXECUTE_FILE}"
    FINISHED_FILE="${TEMP_DIR}/finished"
    test -f "${FINISHED_FILE}" && rm "${FINISHED_FILE}"
    touch "${FINISHED_FILE}"
    if test "$0" = "-"; then
        BASE="https://github.com/sunn4room/script_runner/raw/main"
    else
        BASE="$(dirname "$(readlink -f "$0")")"
    fi
	export BASE
    if test "${RUN_LOG_LEVEL}" = "debug"; then
        RUN_LOG_LEVEL=1
    elif test "${RUN_LOG_LEVEL}" = "info"; then
        RUN_LOG_LEVEL=2
    elif test "${RUN_LOG_LEVEL}" = "error"; then
        RUN_LOG_LEVEL=3
    else
        RUN_LOG_LEVEL=2
    fi
}

_debug() {
    log_time="$(date '+%Y-%m-%d %H:%M:%S')"
    log_level="DEBUG"
    test "${RUN_LOG_LEVEL}" -le 1 && \
        printf '\033[1;35m[%s] \033[1;34m%s \033[0m%s\n' "${log_time}" "${log_level}" "$*"
    printf '[%s] %s %s\n' "${log_time}" "${log_level}" "$*" >> "${LOG_FILE}"
}

_info() {
    log_time="$(date '+%Y-%m-%d %H:%M:%S')"
    log_level=" INFO"
    test "${RUN_LOG_LEVEL}" -le 2 && \
        printf '\033[1;35m[%s] \033[1;32m%s \033[0m%s\n' "${log_time}" "${log_level}" "$*"
    printf '[%s] %s %s\n' "${log_time}" "${log_level}" "$*" >> "${LOG_FILE}"
}

_error() {
    log_time="$(date '+%Y-%m-%d %H:%M:%S')"
    log_level="ERROR"
    test "${RUN_LOG_LEVEL}" -le 3 && \
        printf '\033[1;35m[%s] \033[1;31m%s \033[0m%s\n' "${log_time}" "${log_level}" "$*" >&2
    printf '[%s] %s %s\n' "${log_time}" "${log_level}" "$*" >> "${LOG_FILE}"
}

_read() {
    script="${CACHE_DIR}/$1"
    if ! test -f "${script}"; then
        script_dir="$(dirname "${script}")"
        test -d "${script_dir}" \
            || mkdir -p "${script_dir}" \
            || _error "script path illegal: $1"
        if test "$0" = "-"; then
            if command -v curl >/dev/null 2>&1; then
                curl -fsSL "${BASE}/$1" 2>/dev/null >"${script}"
            elif command -v wget >/dev/null 2>&1; then
                wget -qO- "${BASE}/$1" 2>/dev/null >"${script}"
            else
                false
            fi || _error "cannot download script: $1"
        else
            cat "${BASE}/$1" 2>/dev/null >"${script}" \
                || _error "cannot find script: $1"
        fi
        _debug "cache script: $1"
    fi
    cat "${script}"
}

_run_pre_hook() {
    _read "$1" | sed -n '/^#<.*/p' | while read -r line; do
        eval "_run $(printf '%s' "${line}" | cut -c 3-)"
    done || exit 1
}

_run_post_hook() {
    _read "$1" | sed -n '/^#>.*/p' | while read -r line; do
        eval "_run $(printf '%s' "${line}" | cut -c 3-)"
    done || exit 1
}

_run_script() {
    _read "$1" | sed '/^#[<>\$].*/d' >"${SCRIPT_FILE}"
	if expr "$(head -n 1 "${SCRIPT_FILE}")" : "#\!" >/dev/null 2>&1; then
		_info "$*"
		if  _read "$1" | grep '^#\$$' >/dev/null 2>&1 && test "$(id -u)" -ne 0; then
			shift
			# shellcheck disable=SC2024
			sudo "${SCRIPT_FILE}" "$@" </dev/tty || _error "return $?"
		else
			shift
			"${SCRIPT_FILE}" "$@" </dev/tty || _error "return $?"
		fi
	fi
}

_run() {
    grep '^'"$*"'$' "${FINISHED_FILE}" >/dev/null 2>&1 && {
        _debug "skip: $*"
        return
    }
    grep '^'"$*"'$' "${EXECUTE_FILE}" >/dev/null 2>&1 && \
        _error "occur circular reference: $*"
    printf '%s\n' "$*" >> "${EXECUTE_FILE}"
    _debug "start: $*"
    _run_pre_hook "$1"
    _run_script "$@"
    _run_post_hook "$1"
    printf '%s\n' "$*" >> "${FINISHED_FILE}"
    _debug "end: $*"
}

_main() {
    _init
    _debug "----------------------------------------"
    test "$#" -eq 0 && _error "one or more arguments are required"
    _run "$@"
}

_main "$@"
